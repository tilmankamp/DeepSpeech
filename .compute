#!/bin/bash

set -xe

apt-get install -y python3-venv
python3 -m venv /tmp/venv
source /tmp/venv/bin/activate

pip install -r <(grep -v tensorflow requirements.txt)
pip install tensorflow-gpu==1.13.1

# Install ds_ctcdecoder package from TaskCluster
pip install $(python3 util/taskcluster.py --decoder)

mkdir -p ../keep/summaries

data="${ML_GROUP_DIR}/ds/training/augmented"

training_phase() {
    aug="$1"; shift
    python -u DeepSpeech.py \
        --noshow_progressbar \
        --load auto \
        --train_files "${data}/ds_train_${aug}.csv" \
        --train_batch_size 24 \
        --features_cache "${data}/ds_train_${aug}.bundle" \
        --dev_files "${data}/ds_dev_${aug}.csv" \
        --dev_batch_size 48 \
        --learning_rate 0.0001 \
        --dropout_rate 0.15 \
        --epochs 50 \
        --max_to_keep 1 \
        --checkpoint_dir "../keep" \
        --summary_dir "../keep/summaries" \
        "$@"
    phase_dir="../keep/best_${aug}"
    mkdir -p "${phase_dir}"
    cp ../keep/best_dev* "${phase_dir}"
}

test_phase() {
    phase="$1"; shift
    set_name="$1"; shift
    set_path="$1"; shift
    echo ""
    echo "================ Testing ${set_name} set on ${phase} model ================"
    echo ""
    python -u evaluate.py \
        --checkpoint_dir "../keep/best_${phase}" \
        --load best \
        --test_files "${set_path}" \
        --test_batch_size 48 \
        --test_output_file "../keep/results_${set_name}_set_on_${phase}_model.json"
}

test_set() {
    test_phase clean  "$@"
    test_phase noise1 "$@"
    test_phase noise2 "$@"
}

training_phase clean
training_phase noise1 --load best
training_phase noise2 --load best

test_set clean  "${data}/ds_test_clean.csv"
test_set noise1 "${data}/ds_test_noise1.csv"
test_set noise2 "${data}/ds_test_noise2.csv"
test_set lbvcln "${SHARED_DIR}/data/OpenSLR/LibriSpeech/librivox-test-clean.csv"
