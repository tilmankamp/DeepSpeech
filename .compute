#!/bin/bash

set -xe

apt-get install -y python3-venv libopus0

python3 -m venv /tmp/venv
source /tmp/venv/bin/activate

pip install -U setuptools wheel pip
pip install .
pip uninstall -y tensorflow
pip install tensorflow-gpu==1.14

mkdir -p ../keep/summaries

data="${SHARED_DIR}/data"
target="${USER_DIR}/converted"

declare -a source_csvs=(
  "NPR/WAMU/sets/v0.3/best-train.csv"
  "NPR/WAMU/sets/v0.3/good-train.csv"
  "mozilla/CommonVoice/en_1087h_2019-06-12/clips/train.csv"
  "LDC/fisher-train.csv"
  "LDC/LDC97S62/swb-train.csv"
  "OpenSLR/LibriSpeech/librivox-train-clean-100.csv"
  "OpenSLR/LibriSpeech/librivox-train-clean-360.csv"
  "OpenSLR/LibriSpeech/librivox-train-other-500.csv"
  "OpenSLR/LibriSpeech/librivox-dev-clean.csv"
  "OpenSLR/LibriSpeech/librivox-test-clean.csv"
)

for source_csv in "${source_csvs[@]}"; do
  csv="${data}/${source_csv}"
  sdb="${target}/${source_csv%.csv}.sdb"
  compressed_sdb="${target}/${source_csv%.csv}.compressed.sdb"
  mkdir -p $(dirname "${sdb}")
  if [ ! -f "${sdb}" ]; then
  	echo "Converting ${csv} to ${sdb}..."
  	bin/build_sdb.py --audio-type wav "$csv" "${sdb}"
  fi
  if [ ! -f "${compressed_sdb}" ]; then
  	echo "Compressing ${sdb} to ${compressed_sdb}..."
  	bin/build_sdb.py --audio-type opus "${sdb}" "${compressed_sdb}"
  fi
done

